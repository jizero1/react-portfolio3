[
    {
        "id": 1,
        "projectName": "퍼스널 컬러 테스트",
        "shortDescription": "퍼스널 컬러에 대한 소개 및 테스트 웹사이트",
        "projectImg": "/images/projects/project1.png",
        "projectTools": [
            {
                "tool": "React"
            },
            {
                "tool": "CSS"
            },
            {
                "tool": "React Router"
            }
        ],
        "projectReadMore": [
            {
                "name": "퍼스널 컬러 테스트",
                "date": "2025.02 ~ 2025.03",
                "description": "퍼스널 컬러에 대한 소개와 퍼스널 컬러 테스트를 할 수 있는 홈페이지 입니다. 총 6개의 질문으로 테스트가 진행되고, 테스트가 완료되면 퍼스널 컬러 결과를 확인 할 수 있습니다. 테스트를 통해 사용자는 자신의 퍼스널 컬러는 무엇이고, 어울리는 색상 및 스타일링은 어떻게 되는지에 대한 다양한 정보들을 얻을 수 있습니다.",
                "developer": "최지영",
                "tools": "React / CSS / React Router",
                "githubLink": "https://github.com/jizero1/project-personal",
                "projectLink": "https://jizero1.github.io/project-personal/",
                "titleColor": "rgb(96,60,177)",
                "titleTextColor": "white",
                "functions": [
                    {
                        "number": "• 퍼스널 컬러 소개",
                        "content": "About 페이지에서는 퍼스널 컬러에 대한 의미, 종류, 활용 등에 대한 정보를 확인 할 수 있습니다."
                    },
                    {
                        "number": "• 퍼스널 컬러 테스트",
                        "content": "총 6가지 질문으로 구성되어있으며, 1-3번 질문은 웜/쿨 구분을 위한 테스트이며 4-6번 질문은 웜 또는 쿨의 세부 테스트로 진행 됩니다. 모든 테스트가 완료되면 테스트 결과가 나오게 되는데 해당 퍼스널컬러에 대한 특징 / 추천하는 컬러팔레트 / 스타일링 팁 등을 확인 할 수 있습니다."
                    }
                ],
                "images": [
                    {
                        "name": "퍼스널 페이지1",
                        "img": "/images/projects/project1Detail1.png"
                    },
                    {
                        "name": "퍼스널 페이지2",
                        "img": "/images/projects/project1Detail2.png"
                    }
                ],
                "challenges": [
                    {
                        "number": "• 퍼스널 컬러 테스트에서 사용자의 선택 저장",
                        "content": "퍼스널 컬러 테스트 기능을 구현할 때, 사용자의 선택을 저장하고 결과를 비교하는 과정에서 어려움을 겪었습니다. 사용자가 선택 할 때마다 값이 비동기적으로 업데이트 되면서, 값 비교가 예상과 다르게 작동하는 문제가 발생했습니다. 이를 해결하기 위해 상태 업데이트 직후에 바로 값 비교를 하는 것 보다는, useEffect를 사용해서 선택 값의 길이를 감지하고, 모든 선택이 완료된 시점에만 결과 비교를 하도록 했습니다. 이 문제를 해결 하면서 React에서의 상태관리와, 비동기적인 상태 업데이트의 타이밍이 코드 동작에 얼마나 중요한 것인지 알게 되었습니다."
                    }
                ]
            }
        ],
        "projectLink": "https://jizero1.github.io/project-personal/"
    },
    {
        "id": 2,
        "projectName": "실시간 날씨",
        "shortDescription": "사용자의 현재 위치 기반으로 날씨 정보를 제공하는 웹사이트",
        "projectImg": "/images/projects/project2.png",
        "projectTools": [
            {
                "tool": "React"
            },
            {
                "tool": "CSS"
            },
            {
                "tool": "OpenWeather API"
            }
        ],
        "projectReadMore": [
            {
                "name": "실시간 날씨 ⛅",
                "date": "2024.12 ~ 2025.01",
                "description": "OpenWeather API를 이용하여 사용자의 현재 위치에 기반한 날씨 정보를 제공해주는 홈페이지 입니다. 현재 날씨 뿐만 아니라 구름의 양, 습도, 바람의 속도 등에 대한 정보들도 얻을 수 있습니다.",
                "developer": "최지영",
                "tools": "React / CSS / OpenWeather API",
                "githubLink": "https://github.com/jizero1/weather",
                "projectLink": "https://weather-project-peach-xi.vercel.app",
                "titleColor": "rgb(98,109,157)",
                "titleTextColor": "white",
                "functions": [
                    {
                        "number": "• 실시간 날씨 정보 표시",
                        "content": "OpenWeather Api를 통해 사용자의 현재 위치에 맞는 날씨 정보를 제공 합니다. 사용자가 이해하기 쉽도록 적절한 텍스트(ex. 맑음)와 날씨 아이콘(ex. 상태코드 800은 햇빛 아이콘)을 표시해주었고, 그밖에도 구름의 양 / 습도 / 바람 속도 등 다양한 날씨 관련 정보들을 표시해주었습니다."
                    },
                    {
                        "number": "• .gitignore 파일로 보안 유지",
                        "content": "API를 외부에 노출 하지 않기 위해 환경변수로 관리하며, .gitignore파일을 생성하여 주요 정보가 github에 업로드 되지 않도록 하였습니다."
                    },
                    {
                        "number": "• Node.js로 서버 구축",
                        "content": "비동기 데이터 처리 및 API연동을 위해 Node.js를 이용하여 서버를 구축 하였습니다."
                    }
                ],
                "images": [
                    {
                        "name": "날씨 페이지 이미지1",
                        "img": "/images/projects/project2Detail1.png"
                    }
                ],
                "challenges": [
                    {
                        "number": "• Node.js로 API서버 구축이 처음이라 겪은 문제",
                        "content": "OpenWeather API를 사용할 때 CORS 에러로 날씨 정보가 표시되지 않아, Node.js와 Express로 서버를 구축해 프록시 방식으로 문제를 해결했습니다. 이 과정에서 .env 파일로 API 키를 안전하게 관리하고, 위치 접근 거부 시 예외 처리도 구현했습니다. 날씨 상태 코드를 텍스트와 아이콘으로 변환하며 UI 연동도 경험했고, 프론트와 백엔드 연결에 대한 이해를 높일 수 있었습니다."
                    },
                    {
                        "number": "• 날씨 코드(800, 801) 등을 사용자가 알아보기 쉽게 변환하는 과정",
                        "content": "OpenWeather에서 제공되는 날씨 상태코드는 숫자(ex. 800은 맑음)로 되어있는데 각 상태코드마다 해당되는 아이콘을 보여주기 위해 switch문을 이용하여 변환 해주었습니다. 이를 통해 날씨 정보를 보다 직관적으로 표시 할 수 있었고, 사용자 경험을 향상시킬 수 있었습니다."
                    }
                ]
            }
        ],
        "projectLink": "https://weather-project-peach-xi.vercel.app"
    },
    {
        "id": 3,
        "projectName": "달력 일기",
        "shortDescription": "달력안에 메모와 이미지를 넣을 수 있는 달력 일기 홈페이지",
        "projectImg": "/images/projects/project3.png",
        "projectTools": [
            {
                "tool": "JavaScript"
            },
            {
                "tool": "CSS"
            },
            {
                "tool": "Local Storage"
            }
        ],
        "projectReadMore": [
            {
                "name": "달력 일기 📝",
                "date": "2024.12 ~ 2024.12",
                "description": "현재 날짜 확인 및 이전달/다음달로 이동할 수 있는 달력 기능에, 메모와 이미지 기능을 더하여 달력을 일기처럼 사용 할 수 있는 홈페이지입니다.",
                "developer": "최지영",
                "tools": "React / CSS / LocalStorage",
                "githubLink": "https://github.com/jizero1/CalendarDiary",
                "projectLink": "https://jizero1.github.io/CalendarDiary/",
                "titleColor": "rgb(230,239,232)",
                "titleTextColor": "black",
                "functions": [
                    {
                        "number": "• 날짜별 메모 및 이미지 추가 기능",
                        "content": "날짜를 클릭하면 메모와 이미지를 추가할 수 있는 모달창이 뜹니다. 작성된 메모와 추가한 이미지는 LocalStorage안에 저장되고, 이미지 업로드 후 삭제하고 싶을경우 삭제 버튼을 눌러 삭제도 가능 하도록 구현 하였습니다."
                    },
                    {
                        "number": "• 날짜에 저장된 데이터가 있을경우, 📝 이모티콘 표시 기능",
                        "content": "저장된 데이터가 있다면, 날짜 옆에 📝 이모티콘이 표시되어 해당 날짜에 무언가 입력되어있음을 표시해주었습니다. 또한, 메모와 이미지 모두 삭제하면 이모티콘도 사라지게 만들어서 해당 날짜에 아무 데이터가 저장되어있지 않음을 직관적으로 알 수 있게 하였습니다."
                    }
                ],
                "images": [
                    {
                        "name": "달력 페이지 이미지1",
                        "img": "/images/projects/project3Detail1.png"
                    },
                    {
                        "name": "달력 페이지 이미지2",
                        "img": "/images/projects/project3Detail2.png"
                    }
                ],
                "challenges": [
                    {
                        "number": "• 달력을 새로고침 하거나 달 이동시, 📝 이모티콘이 사라지는 문제",
                        "content": "renderCalendar()이 실행 될때마다 달력 요소들을 새로 렌더링 하면서 📝 이모티콘이 사라지는 문제가 발생 했습니다. 이를 해결 하기 위해 날짜 렌더링시 각 날짜마다 localStorage를 확인하여 저장된 데이터가 있을경우 해당 날짜에 이모티콘을 다시 넣어주도록 수정하여 이모티콘이 사라지는 문제를 해결 하였습니다."
                    },
                    {
                        "number": "• 모달 안에 메모와 이미지가 모두 삭제 되었음에도 날짜에 이모티콘이 남아있는 문제",
                        "content": "메모와 이미지가 모두 삭제 되었음에도 📝 이모티콘이 계속 남아있는 문제가 발생했습니다. 이 문제는 모달창 열때를 기준으로 데이터가 저장되어있는지 아닌지를 판단했기 때문에 생긴 문제였습니다. 문제를 해결 하기 위해 모달창을 열때가 아닌 모달 내부에 확인(저장)버튼을 누르는 시점에 데이터 저장의 유무를 판단하도록 수정하여 문제를 해결하였습니다."
                    }
                ]
            }
        ],
        "projectLink": "https://jizero1.github.io/CalendarDiary/"
    },
    {
        "id": 4,
        "projectName": "하루 토마토",
        "shortDescription": "할일을 기록/관리하는 ToDoList 앱",
        "projectImg": "/images/projects/project4.png",
        "projectTools": [
            {
                "tool": "React Native"
            },
            {
                "tool": "AsyncStorage"
            }
        ],
        "projectReadMore": [
            {
                "name": "하루 토마토",
                "date": "2025.01 ~ 2025.03",
                "description": "할 일을 기록/관리하는 ToDoList 앱으로, 직접 그린 토마토 아이콘을 활용하여 귀엽게 ToDoList를 구성 했습니다. 할 일 추가 및 삭제기능 뿐만 아니라 기분 표시 기능도 추가하여 사용자의 하루를 더욱 효율적으로 관리하고 확인 할 수 있게 만들었습니다.",
                "developer": "최지영",
                "tools": "React Native / AsyncStorage",
                "githubLink": "https://github.com/jizero1/tomato-app",
                "projectLink": "https://play.google.com/store/apps/details?id=com.jizerotodo",
                "titleColor": "rgb(96,60,177)",
                "titleTextColor": "white",
                "functions": [
                    {
                        "number": "• 할 일 추가 / 완료 / 삭제기능",
                        "content": "앱 하단의 + 버튼을 누르면 모달창이 열리고, 사용자는 텍스트 입력과 5가지 색상의 라벨 중 하나를 선택하여 할 일을 추가할 수 있습니다. 할 일이 완료되면 회색 토마토 버튼을 눌러 완료 상태로 표시할 수 있는데, 이때 토마토 색상이 빨간색으로 변경되어 완료된 항목을 시각적으로 구분하기 쉽도록 하였습니다. 또한, 삭제 아이콘을 눌러 할 일을 간편하게 삭제 할 수 있습니다. 모든 할 일 데이터들은 AsyncStorage에 저장되어 앱을 종료 한 후에도 기록이 유지되도록 구현 하였습니다."
                    },
                    {
                        "number": "• 기분 표시 기능",
                        "content": "5가지색상과 표정의 토마토 아이콘으로 사용자는 날짜별로 자신의 기분을 표현 할 수 있습니다. 기분 표시도 AsyncStorage에 저장되게 하여 앱 종료하거나 달 이동시에도 기분표시가 유지되도록 하였습니다."
                    }
                ],
                "images": [
                    {
                        "name": "토마토 앱 이미지1",
                        "img": "/images/projects/project4Detail1.png"
                    },
                    {
                        "name": "토마토 앱 이미지2",
                        "img": "/images/projects/project4Detail2.png"
                    }
                ],
                "challenges": [
                    {
                        "number": "• 날짜별로 기분 및 할 일 데이터를 관리시 로딩 속도 문제",
                        "content": "여러 날짜의 데이터를 순차적으로 불러오다보니 로딩 속도가 느려졌습니다. 이 문제를 해결 하기 위해 Promise.all을 사용하여 여러 날짜의 데이터를 한번에 병렬로 불러오도록 하였더니 로딩 속도가 개선 되었습니다. 이를 통해 비동기 처리 방식이 성능 개선에 얼마나 중요한 것인지 깨닫게 되었습니다."
                    },
                    {
                        "number": "• 패키지명 불일치로 인한 에러",
                        "content": "앱의 패키지명을 'todo'에서 'jizerotodo'로 변경한 뒤, 일부 파일에 패키지명이 일관되게 반영되지 않아 앱 실행 시 에러가 발생했습니다. AndroidManifest.xml, MainActivity, MainApplication 등 주요 파일의 패키지명을 일관되게 'jizerotodo'로 변경한 후 앱이 에러없이 정상적으로 실행 될 수 있었습니다."
                    },
                    {
                        "number": "• APK 설치 후 앱 실행 실패",
                        "content": "앱 설치 후 ApkAssets 관련 에러와 함께 실행이 되지 않는 문제가 발생했는데, 이는 이전 버전의 APK가 남아 있었기 때문에 발생한 문제였습니다. 문제를 해결하기 위해 adb uninstall 명령어를 통해 기존 앱을 완전히 삭제한 후, release 모드로 빌드한 APK를 설치하여 문제를 해결하였습니다."
                    },
                    {
                        "number": "• 이중 스플래시 문제",
                        "content": "Play Console 사전 출시 보고서에 '이중 스플래시'라는 문제가 있다는 것을 확인 하였습니다. 해당 문제는 시스템에서 자동으로 제공하는 스플래시 화면과 React Native 에서 제공하는 스플래시가 서로 충돌하여 생긴 문제였습니다. 이를 해결하기 위해 시스템에서 제공되는 스플래시를 사용하지 않는다는 코드를 추가하여 앱 내에서 하나의 스플래시만 표시되도록 설정하여 문제를 해결하였습니다."
                    }
                ]
            }
        ],
        "projectLink": "https://play.google.com/store/apps/details?id=com.jizerotodo"
    },
    {
        "id": 5,
        "projectName": "최지영의 포트폴리오",
        "shortDescription": "저를 소개하기 위한 포트폴리오 웹사이트 입니다.",
        "projectImg": "/images/projects/project5.png",
        "projectTools": [
            {
                "tool": "React"
            },
            {
                "tool": "CSS"
            },
            {
                "tool": "React Router"
            },
            {
                "tool": "emailJs"
            },
            {
                "tool": "Figma"
            }
        ],
        "projectReadMore": [
            {
                "name": "최지영의 포트폴리오",
                "date": "2025.03 ~ 2025.04",
                "description": "저를 소개하기 위해 제작된 포트폴리오 웹사이트 입니다. About에는 자기소개 및 프론트엔드 개발자로서의 목표와 비전에 대한 설명이 담겨있고, Projects에는 작업했던 프로젝트에 대한 자세한 소개 및 문제해결 상황 등에 대한 설명이 되어있습니다.",
                "developer": "최지영",
                "tools": "React / CSS / React Router / emailJs / Lottie",
                "githubLink": "https://github.com/jizero1/react-portfolio3",
                "projectLink": "https://jizero1.github.io/react-portfolio3/",
                "titleColor": "rgb(244,244,248)",
                "titleTextColor": "black",
                "functions": [
                    {
                        "number": "• React Router로 페이지 구분",
                        "content": "React Router을 활용하여 Home, Menu, About, Project 등의 페이지를 라우팅 처리 하고, pages폴더 내에 각 페이지 별로 디렉토리 구조를 구성하여 유지보수성을 높이고자 하였습니다."
                    },
                    {
                        "number": "• navigator.clipboard.writeText() API로 링크 복사",
                        "content": "Menu 페이지 내부에있는 Contact메뉴에서 이메일, 블로그, 깃허브 아이콘을 클릭하면 링크와 복사버튼을 보여주고, 복사버튼 클릭시 navigator.clipboard.writeText() API를 통해 링크가 바로 복사될 수 있는 기능을 구현하였습니다. 이를 통해 사용자가 일일히 링크를 복사하는 불편함이 없도록 사용자의 편의성을 높였습니다."
                    },
                    {
                        "number": "• Menu 페이지에서 마우스 커서 변경",
                        "content": "Menu 페이지에 진입하면 마우스 커서를 별 아이콘으로 변경하고, 각 메뉴에 마우스를 올리면 속이 빈 별로 전환 되도록 구현하였습니다. 이러한 시각적 피드백을 통해 사용자 경험을 더욱 향상 시키고자 하였습니다."
                    },
                    {
                        "number": "• emailJs로 메일 보내는 기능 추가",
                        "content": "About페이지 내 Contact 컴포넌트에서 emailJs를 활용해 사용자가 입력한 이름, 이메일, 메시지를 지정된 템플릿으로 전송 할 수 있는 폼을 구현하였습니다. 백엔드 서버 없이도 이메일 전송이 가능 하도록 하여 간편하게 커뮤니케이션 기능을 구현 하였습니다."
                    }
                ],
                "images": [
                    {
                        "name": "포트폴리오 이미지1",
                        "img": "/images/projects/project5Detail1.png"
                    },
                    {
                        "name": "포트폴리오 이미지2",
                        "img": "/images/projects/project5Detail2.png"
                    }
                ],
                "challenges": [
                    {
                        "number": "• Menu 페이지에서 벗어날때 이전페이지로 이동해야하는데 이동되지 않는 문제",
                        "content": "Menu 페이지에서 메뉴를 클릭하지 않고 Menu페이지에서 벗어나면 이전 페이지로 이동해야하는데 <Link>는 링크만 변경 하기 때문에 이전 페이지를 추적할 수 없는 문제가 생겼습니다. 그래서 useNavigate와 useLocation을 이용하여 현재 위치를 파악하고 이전페이지로 동적인 페이지 이동이 될 수 있게 수정 하여 문제를 해결하였습니다."
                    },
                    {
                        "number": "• 이미지 경로 문제",
                        "content": "github pages로 페이지 배포 후, 로컬 환경에서 이미지가 보이지 않는 문제가 발생하였습니다. 문제의 이유는 HashRouter을 사용하면서 이미지 경로 해석이 다르게 된 것이 문제였습니다. 이를 해결 하기 위하여 이미지 경로에 'process.env.PUBLIC_URL'을 추가하여 절대경로로 수정하여 문제를 해결하였습니다."
                    },
                    {
                        "number": "• projectsData.json 데이터 불러오기 문제",
                        "content": "projectsData.json에서 데이터를 불러올때 모든 데이터가 한번에 모달창 내부에 다 뜨는 문제가 발생 하였습니다. 문제 해결을 위해 현재 클릭한 프로젝트가 무엇인지 해당 프로젝트만 selectedProject에 저장하고, 해당 데이터만 ProjectView 컴포넌트로 전달하여 모달 안에 출력되도록 수정하여 모든 데이터가 다 뜨는 문제를 해결 하였습니다."
                    }
                ]
            }
        ],
        "projectLink": "https://jizero1.github.io/react-portfolio3/"
    }
]